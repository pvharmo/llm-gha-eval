{"id": "batch_req_67041771766c8190a7afa53c728dfee1", "custom_id": "63c4a0921899db58865147f0", "response": {"status_code": 200, "request_id": "ef568e2704736feed13849390a34a8d7", "body": {"id": "chatcmpl-AFlcRNKkry2h0PGTUUTDCQsl6I90C", "object": "chat.completion", "created": 1728321331, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: golangci-lint\non:\n  push:\n    branches: [ master, main ]\n    tags:\n      - 'v*'\n  pull_request:\npermissions:\n  contents: read\njobs:\n  golangci:\n    name: lint\n    uses: 'narup09/.github/.github/workflows/golangci-lint.yml@main'\n    with:\n      action: 'golangci-lint'\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 193, "completion_tokens": 91, "total_tokens": 284, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_6704177182b0819091e137feb8ec6bea", "custom_id": "63c4984b1899db58864df04e", "response": {"status_code": 200, "request_id": "37c12c4fae11b0ad92f7619850504bac", "body": {"id": "chatcmpl-AFlcT42ss7gOnM5fbMubRCEVGig8K", "object": "chat.completion", "created": 1728321333, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: go\non:\n  push:\n    branches:\n      - main\n  pull_request:\njobs:\n  checklicense:\n    name: check license headers\n    runs-on: ubuntu-latest\n    steps:\n      - checkoutActions/checkout@v2\n      - uses: lightbend/sbt-github-actions@v1.12.1\n        with:\n          command: \"header verify\"\n  gofmt:\n    name: check code format\n    runs-on: ubuntu-latest\n    steps:\n      - checkoutActions/checkout@v2\n      - run: gofmt -s -d -e . \\|\\| true\n      - run: find . -type f -not -name '*.go' -not -name '*.mod' -not -name '*.sum' \\-exec ./0221.modify-with-website-static-./422.format-diff \"GO\" \\; \\|\\|\\ true\n      - run: git --no-pager diff\n  test:\n    name: unit and integration tests\n    runs-on: ubuntu-latest\n    steps:\n      - checkoutActions/checkout@v2\n      - run: \"./setupByModule.sh test\"\n      - run: go test -reset-timeout=logs/timeout.log 2>&1|tee logs/test.log|cat logs/test.log\n  golangci:\n    name: lint\n    runs-on: ubuntu-latest\n    steps:\n      - checkoutActions/checkout@v2\n      - run: golangci-lint run --deadline 5m --verbose -c ./linters/config/.trivialplusnkrc.yml --skip-dirs use-operators\n  cue-eval:\n    name: cue\n    runs-on: ubuntu-latest\n    steps:\n      - checkoutActions/checkout@v2\n      - run: cue eval ./cue\\|\\| true\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 224, "completion_tokens": 390, "total_tokens": 614, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_670417718ea081909b9ca1c40dd3312e", "custom_id": "63c498921899db58864e0da5", "response": {"status_code": 200, "request_id": "6e527557929d2648ed42a9159ee9d560", "body": {"id": "chatcmpl-AFlcZN9Sf7dBRw962XcmCDS2FlkMc", "object": "chat.completion", "created": 1728321339, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: Test attest / verify-attestation\n\non:\n  pull_request:\n    branches:\n    - main\n    - 'release-*'\n\npermissions:\n  contents: read\n  id-token: write\n\njobs:\n  cic-test:\n    name: \"attest / verify-attestation test\"\n    runs-on: ubuntu-22.04\n    steps:\n      - uses: actions/checkout@v3\n      - name: setup go\n        uses: actions/setup-go@v3\n        with:\n          go-version: 1.18\n          go-version-file: go.work\n      - name: build cic binary\n        run: make -C . cic.intoto\n      - name: verify-attestation - valid from first-party\n        env:\n          GOFLAGS: -mod=vendor\n        run: |\n          set -e\n          case \"$GITHUB_SHA\" in\n          # point to plain sha for testing with actions test.\n          9d9ff84b68a92e0d388daad9cd68135549050ff0)\n            testcase=\"test/e2e/images/golang:1.18\"\n            testcase_sha=\"173cd826e09e0b39ae0c23e954500f2b36291a7d9d733342ca82af14270d7c4e\"\n            ;;\n          # point to built branch for golang\n          ac05fdd9d0c0503fd151f89abf61aad28c973509)\n            testcase=\"ghcr.io/harvester-project/cli-ng/cli-ng:testing-verify-attestation\"\n            testcase_sha=\"ac2e19a4f6da7ff2f979cb88c5150edff761ac9669fda157f239035e3b9fb63a\"\n            ;;\n          esac\n          # build the cic\n          export GOROOT_FINAL=\"/usr/local/go\"\n          touch ./test/assets/in_toto_attestations.vendor\n          go build ./bin/cic.intoto \\\n             -ldflags \"-extldflags -static -extldflags '-Wl,-V'\" -o ./test/assets/in_toto_attestations.vendor -tags intoto_vendor\n\n          attestation=$(detectors vec3detector-variant=\"go\" vec3detector-variant-entries=\"1:indexid=920859b066c07e4b0cbb1711f627283226e6dfa817b8ad1e6e519e557434a4bcc3debb0efb9fcc64c534cb1380d1a935b28b0484f5e7e8b34443399e01483e8ec22210e534869363888c88cf71e3fb143a5505e29bc909503fe6882ad8e5edffb2ed2c7ab9ef9014125\" \\\n          ./test/assets/in_toto_attestations.vendor verify-attestation \"${GITHUB_SHA_SPACE}${case_type}\" \\\n             --process-in-log-serialized-associated-remote-labels=certification.associated.remote-labels=\"vec3detector-variant=detector314.ipfs.equihash256m.bcp,e2ee.object=826e736e6572673a1864207761363965636c6c66623635e36464643566616337352e63631e9d00f1634ee\"}\" \\\n          --\n            '@oss/l2-to-log' '$GITHUB_REPOSITORY Space space' &&\n            certpb-to-idstring >>.git/index)\" \\\n            1d487992e2644af0eab7240eedbd243ebf12db34d8a6e58c6ef60b7d12db337805a42f704f37be903bcc7fc057404cdbcd6bc6f1c528d9cda12c733e69bf2e7ea11876c5304bb9191d2720c8f120c44a831f37ab7de0ebd786e772af12f4dcffb79ad9239e67f3ace0e674\"+\n            iffdata-unsafe \\\n            \\'93de644e05f901f9af26a4f79673145bde4cb3d00cffcf39dd57f55ffcf26029e3a4284390317ccda6202288dff153626e9c7927<|endoffile|>>>> master\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 193, "completion_tokens": 963, "total_tokens": 1156, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_670417719adc8190a0300f1d438617b5", "custom_id": "63c49ea01899db5886507e71", "response": {"status_code": 200, "request_id": "1984bc17384b0d28c51317516700a8d5", "body": {"id": "chatcmpl-AFlcln5ypUhwJ0g4c5UgICYlRNiGk", "object": "chat.completion", "created": 1728321351, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: \"CodeQL\"\n\non:\n  push:\n    branches: [ 'master', 'insights_preview' ]\n  pull_request:\n    # The branches below must be a subset of the branches above\n    branches: [ 'master' ]\n  schedule:\n    - cron: '30 5 * * 6'\n\njobs:\n  analyze:\n    name: Analyze\n    uses: github/codeql-action/analyze@v2\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 175, "completion_tokens": 92, "total_tokens": 267, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_67041771a6fc8190a0ce72c2939f233d", "custom_id": "63c4988b6fc19abdf9ca9d99", "response": {"status_code": 200, "request_id": "afdbfe690668a93c27d61c72600f674e", "body": {"id": "chatcmpl-AFlcnSG5JiPKhybWJmNyw2cFa7hGS", "object": "chat.completion", "created": 1728321353, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml # Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n# \n#    http://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nname: \"Close issues related to a merged pull request based on master branch.\"\non:\n  pull_request:\n    # The `branches` field cannot be used for both `pull_request` and `push`\n    # so we use `push` to track PRs created on the `main` branch that needs\n    # a pull request to merge to the `parent` branch.\n    branches: [main, master]\n    types: [closed]\n\njobs:\n  closeIssueOnPrMergeTrigger:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Close issue\n        if: ${{ github.event.pull_request.merged == true }}\n        uses: peter-evans/close-issue@v1\n        id: close_issue\n        with:\n          issues: ${{ github.event.pull_request.body }}\n          exclude-pr-issue-link: true\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 145, "completion_tokens": 364, "total_tokens": 509, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_67041771b2fc8190840014865ee3549c", "custom_id": "63c49fbb1e336480757b5bbd", "response": {"status_code": 200, "request_id": "cbb76f03dc7445e33f4a4c69265d5e6a", "body": {"id": "chatcmpl-AFlctw3sGXNngFRfpoZkT8g4oohHB", "object": "chat.completion", "created": 1728321359, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: Release\non:\n  push:\n    branches-ignore:\n      - main\n      - \"dependabot/**\"\n\njobs:\n  release-canary:\n    name: npm\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v3\n    - name: Install\n      run: yarn install --frozen-lockfile=true --prod=false\n    - name: Build\n      run: yarn make ci\n    - name: Upload .app file\n      uses: actions/upload-artifact@v3\n      with:\n        name: release-darwin-universal.1.App-x64\n        path: ./release-hero-packager/hero-record-tor-*.dmg\n    - name: Upload .exe file\n      uses: actions/upload-artifact@v3\n      with:\n        name: release-win32.exe\n        path: ./out/hero-record-tor-win32-*.exe\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 137, "completion_tokens": 204, "total_tokens": 341, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_67041771bf2081909f34491c10c9bf8e", "custom_id": "63c49a7c1899db58864ed881", "response": {"status_code": 200, "request_id": "253bd28653075c8cb5b4b25179aa5573", "body": {"id": "chatcmpl-AFlcxAF0jDFA1K25bGJo5LtjBSt5l", "object": "chat.completion", "created": 1728321363, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: 'Test'\non: pull_request\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - name: 'Check Out'\n      uses: actions/checkout@master\n    - name: 'Install Dependencies'\n      run: |\n        python3 -m venv .venv\n        .venv/bin/pip install -e .[dev]\n    - name: 'Run the Tests!'\n      run: .venv/bin/pytest\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 110, "completion_tokens": 102, "total_tokens": 212, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_67041771ccbc8190aa4619d397c06efc", "custom_id": "63c4959e7843b61269a08d2a", "response": {"status_code": 200, "request_id": "cbb3339df03fc8c205a8e1c8c27ceb0a", "body": {"id": "chatcmpl-AFlczzB86OfOQyjnBPvdeSrOvZiqI", "object": "chat.completion", "created": 1728321365, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: CompatHelper\n\non:\n  schedule:\n  - cron: '00 00 * * *'\n  workflow_dispatch:\n\njobs:\n  CompatHelper:\n    uses: JuliaRegistries/CompatHelper.jl/.github/workflows/compathelper.yml@master\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 126, "completion_tokens": 57, "total_tokens": 183, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_67041771d9a88190bfc8c277e4957048", "custom_id": "63c49db41899db5886501d09", "response": {"status_code": 200, "request_id": "4465a5557715f8b056b00e7d8885db6a", "body": {"id": "chatcmpl-AFld1dHDtjLVw4ESCC6RP1rjJvktZ", "object": "chat.completion", "created": 1728321367, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml name: Docker\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - docker\n  schedule:\n    - cron: '00 12 * * 1'\njobs:\n  build-and-push-image:\n    runs-on: ubuntu-latest\n    container:\n      image: docker:22.10.0\n      options: >-\n        --user root\n        --privileged # for docker-in-docker.\n        --volume '/run/docker.sock:/run/docker.sock'\n        --tmpfs /tmp\n    services:\n      docker_daemon: # See https://github.com/cli/cli/issues/4215\n        image: docker:20.10.2-dind\n        options: >-\n          --user root\n          --privileged # for docker-in-docker.\n          --tmpfs /tmp\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v3\n      - name: Install roswell\n        lock-file: 'roswell-lock.json'\n        run: |\n          sudo add-apt-repository -y ppa:roswell/ppa\n          sudo apt update && sudo apt -y install roswell\n      - name: Install sfdx\n        uses: salesforcecli/sfdx-github-action@master\n        with:\n          version: latest\n          install_plugins: sfdx-jenkins-plugin\n      - run: docker info\n      - run: bash deploy/docker_build_buildah_bin.sh\n      - run: bash deploy/docker_build_buildah.sh\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 153, "completion_tokens": 322, "total_tokens": 475, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
{"id": "batch_req_67041771e59c8190b5fd0876fb118304", "custom_id": "63c5c634ac4f2678a5bd7d01", "response": {"status_code": 200, "request_id": "deb2d1772c13d6029ecc892bcf9b9764", "body": {"id": "chatcmpl-AFld6KHKYpkRuoFLiFht01W0kDHC8", "object": "chat.completion", "created": 1728321372, "model": "ft:gpt-4o-mini-2024-07-18:personal:sm-all-2-epochs:AEhGyhKP", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml # Copyright 2020-2023 The LLVM Foundation\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n# Part of the LLVM Project, under the Apache License\n# v2.0 with LLVM Exceptions. You can obtain a copy of the\n# license at http://llvm.org/LICENSE.txt\n#\n# Please see https://llvm.org/docs/Contributing.html for\n# details about contributing to this project.\n\non:\n  # Manually trigger the workflow\n  workflow_dispatch:\n  # Run when there's a push to any release branch\n  push:\n    branches: release/**\n    paths:\n      - 'llvm/**'\n      - '.github/workflows/llvm-tests.yml'\n      - '.github/workflows/llvm-project-tests.yml'\n  # Run on pull requests targeting any release branch\n  pull_request:\n    branches: release/**\n    paths:\n      - 'llvm/**'\n      - '.github/workflows/llvm-tests.yml'\n      - '.github/workflows/llvm-project-tests.yml'\n\n# Ensure that at most one workflow with the same name and target branch is\n# running at the same time.\n# For example, if `llvm/lib/MEMORY_IMPLEMENTATION` has 20 modified, it will\n# enqueue 20 workflows with the same name and branch and cancel all previous\n# workflows with the same name and branch.\nconcurrency: '${{ github.workflow }}-${{ github.ref }}'\n\njobs:\n  check_all:\n    name: Test llvm,clang,libclc\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get sources\n        uses: actions/checkout@fast-fail\n\n      - name: Build and run tests\n        run: cmake -G Ninja -S llvm -B llvm_build && cmake --build llvm_build -j 8 && cmake --install llvm_build && cd llvm_build && ninja check-llvm check-clang check-libclc\n\n  build_lldb:\n    name: Build lldb\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get sources\n        uses: actions/checkout@fast-fail\n\n      - name: Build lldb\n        run: cd llvm/tools/lldb && ${{ github.workspace }}/llvm/utils/lldb/BuildAndTestLldb.py -q\n\n  check_lld:\n    name: Test lld\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get sources\n        uses: actions/checkout@fast-fail\n      - name: Run lld tests\n        run: cd llvm/tools/lld && python2 ../llvm/utils/lld/build/lld-test -skip-existing-build --skip-integration-test\n\n  abi-dump-setup:\n    name: ABI dump setup\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get sources\n        uses: actions/checkout@fast-fail\n\n      - name: Build libOMPTarget\n        continue-on-error: true\n        run: |-\n          export OBJECT_MODE=64\n          export LTO=full\n          cd llvm/projects/libomptarget\n          cmake -G Ninja -DLLVM_ROOT=${{ github.workspace }}/llvm_build -DLLVM_USE_LOADER=OFF -DLLVM_USE_LIBCRT=OFF\n          cmake --build .\n        env:\n          CMAKE_MODULE_PATH: ${{ github.workspace }}/llvm/projects/libomptarget/cmake/modules\n\n  abi-dump:\n    needs: [abi-dump-setup]\n    name: ABI dump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Modify lto file name for lto dump matching\n        run: |\n          export ASAN_OPTIONS=detect_leaks=0\n          sed -i 's~.lto2~_64.lto2~g' ${{ github.workspace }}/llvm/projects/libomptarget/build_gpu_*.lto2\n\n      - name: Generate pci dump\n        continue-on-error: true\n        run: cd ${{ github.workspace }}/llvm_projects/libomptarget; python ../llvm/utils/abi-dumper/abi-dump.py -b x86_64 -a aarch64 --abichanges ${{ github.workspace }}/llvm/projects/libomptarget/.build.temp -o ./build_gpu_64.lto2 >> \"${GITHUB_LOG_PATH}\"\n      - name: Generate cpu dump\n        continue-on-error: true\n        run: cd ${{ github.workspace }}/llvm_projects/libomptarget; python ../llvm/utils/abi-dumper/abi-dump.py -b x86_64 -a x86_64 --abichanges ${{ github.workspace }}/llvm/projects/libomptarget/.build.temp -o ./build_cpu_64.lto2 >> \"${GITHUB_LOG_PATH}\"\n\n  abi-compare:\n    name: Compare ABI dumps\n    needs: [abi-dump]\n    runs-on: ubuntu-latest\n    steps:\n      - name: Get sources\n        uses: actions/checkout@fast-fail\n\n      - name: Compare ABI dumps\n        continue-on-error: true\n        run: |\n          export ASAN_OPTIONS=detect_leaks=0\n          cd ${{ github.workspace }}/llvm/projects/libomptarget; python ../llvm/utils/abi-dumper/abi-compare.py -g ./build_gpu_64.lto2 >> \"${GITHUB_LOG_PATH}\"\n      - run: \"test -z \\\"$(grep ABI CHANGED ${{github.workspace}}/llvm/projects/libomptarget/ABI-CHANGELOG)\\\" || exit 1\"\n      - run: \"grep ABI CHANGED ${{github.workspace}}/llvm/projects/libomptarget/ABI-CHANGELOG | wc -l\"\n      - name: Upload lto dumps\n        uses: actions/upload-artifact@v3\n        with:\n          name: lto dumps\n          path: ${{ github.workspace }}/llvm/projects/libomptarget/build_gpu_64.lto2\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 391, "completion_tokens": 1235, "total_tokens": 1626, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_812d9b7346"}}, "error": null}
