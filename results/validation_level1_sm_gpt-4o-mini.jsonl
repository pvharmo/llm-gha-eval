{"id": "batch_req_67042670af288190ab57b889496ee797", "custom_id": "63c4a0921899db58865147f0", "response": {"status_code": 200, "request_id": "2f0e7970cc39fdeabe5056944493ec19", "body": {"id": "chatcmpl-AFmUQTR9mEDyERw6Qhbt60i7o5YvY", "object": "chat.completion", "created": 1728324678, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: golangci-lint\n\non:\n  push:\n    branches:\n      - master\n      - main\n    tags:\n      - 'v*'\n  pull_request:\n\npermissions:\n  contents: read\n\njobs:\n  lint:\n    id: golangci\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Run golangci-lint\n        run: |\n          # Replace this with your golangci-lint command\n          echo \"Running golangci-lint...\"\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 193, "completion_tokens": 126, "total_tokens": 319, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_67042670c4c48190bc88f2cee6d96845", "custom_id": "63c4984b1899db58864df04e", "response": {"status_code": 200, "request_id": "cbb698c597d7dd483c32a541d05a0f87", "body": {"id": "chatcmpl-AFmRnUwcyGuixKDQosqEjxhD2qSZK", "object": "chat.completion", "created": 1728324515, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: go\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n\njobs:\n  checklicense:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Check License Headers\n        run: ./scripts/check_license.sh\n\n  gofmt:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Check Code Format\n        run: gofmt -l .\n\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Run Unit and Integration Tests\n        run: npm test\n\n  golangci:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Run Linting\n        run: golangci-lint run\n\n  cue-eval:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Evaluate CUE Files\n        run: cue eval .\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 224, "completion_tokens": 270, "total_tokens": 494, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_67042670d37481908846cbe9337c1877", "custom_id": "63c498921899db58864e0da5", "response": {"status_code": 200, "request_id": "c0b96c15f35c378e4f923972c5b6db70", "body": {"id": "chatcmpl-AFmRi6dzBc3NTExgGTF3xKw2Zw1Co", "object": "chat.completion", "created": 1728324510, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: Test attest / verify-attestation\n\non:\n  pull_request:\n    branches:\n      - main\n      - release-*\n\npermissions:\n  contents: read\n\njobs:\n  cip-test:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Set up Go\n        uses: actions/setup-go@v2\n        with:\n          go-version: '1.19' # replace with your Go version\n\n      - name: Run tests\n        run: |\n          go test ./... -v\n        shell: bash\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 193, "completion_tokens": 133, "total_tokens": 326, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_67042670e0348190b2a0a3d17b9e070b", "custom_id": "63c49ea01899db5886507e71", "response": {"status_code": 200, "request_id": "3bbfcb65786093c9b7cb351bd2bb71da", "body": {"id": "chatcmpl-AFmSpvLB7VOoqa5QGTvDOipLVouhk", "object": "chat.completion", "created": 1728324579, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: CodeQL\n\non:\n  push:\n    branches:\n      - master\n      - insights_preview\n  pull_request:\n    branches:\n      - master\n  schedule:\n    - cron: '30 5 * * 6'\n\njobs:\n  analyze:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Initialize CodeQL\n        uses: GitHub/codeql-action/init@v2\n        with:\n          languages: jupyter\n\n      - name: Build the code\n        run: |\n          # Add commands to build your Jupyter notebooks if necessary\n          echo \"No build necessary for Jupyter Notebooks\"\n\n      - name: Run CodeQL Analysis\n        uses: GitHub/codeql-action/analyze@v2\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 175, "completion_tokens": 176, "total_tokens": 351, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_6704267108108190868a0de624a61518", "custom_id": "63c4988b6fc19abdf9ca9d99", "response": {"status_code": 200, "request_id": "24b05af3a187c52841a2c1e7128fc5fa", "body": {"id": "chatcmpl-AFmRW8dqvPSxXatq2n95maWOihBWZ", "object": "chat.completion", "created": 1728324498, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: Close issues related to a merged pull request based on master branch\n\non:\n  pull_request:\n    types:\n      - closed\n    branches:\n      - main\n      - master\n\njobs:\n  closeIssueOnPrMergeTrigger:\n    runs-on: ubuntu-latest\n    if: github.event.pull_request.merged == true\n    steps:\n      - name: Close related issues\n        run: |\n          # Your script to close related issues goes here\n          echo \"Closing issues related to the merged pull request...\"\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 145, "completion_tokens": 111, "total_tokens": 256, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_74ba47b4ac"}}, "error": null}
{"id": "batch_req_6704267116f0819082bec69d74e6946b", "custom_id": "63c49fbb1e336480757b5bbd", "response": {"status_code": 200, "request_id": "780f5ce5bf016f3e948e21a4a81206c4", "body": {"id": "chatcmpl-AFmUOzcQhmKv4RSaklvD79c3nunGJ", "object": "chat.completion", "created": 1728324676, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: Release\n\non:\n  push:\n    branches-ignore:\n      - main\n      - dependabot/**\n\njobs:\n  release-canary:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Code\n        uses: actions/checkout@v2\n      - name: Set up Ruby\n        uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: 'latest'\n      - name: Install Dependencies\n        run: |\n          bundle install\n      - name: Run Tests\n        run: |\n          bundle exec rake test\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 137, "completion_tokens": 123, "total_tokens": 260, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_670426712a70819090752820b7ec530a", "custom_id": "63c49a7c1899db58864ed881", "response": {"status_code": 200, "request_id": "03a74884e1e9d2209f260df6b35f1a0f", "body": {"id": "chatcmpl-AFmUgh5nLvoaTkIxekEwFM7XnjMT2", "object": "chat.completion", "created": 1728324694, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: Test\n\non: \n  pull_request:\n    types: [opened, synchronize, reopened]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Set up Jupyter\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y python3 python3-pip\n          pip3 install notebook\n\n      - name: Run Jupyter Notebook\n        run: |\n          jupyter nbconvert --to notebook --execute --inplace your_notebook.ipynb\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 110, "completion_tokens": 130, "total_tokens": 240, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_6704267139f481908a76f31b6db7b87b", "custom_id": "63c4959e7843b61269a08d2a", "response": {"status_code": 200, "request_id": "109fe42b02e974d46ac7566bebf77b83", "body": {"id": "chatcmpl-AFmTtQNAbKM3NWZzhOAIeed7QtMC3", "object": "chat.completion", "created": 1728324645, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: CompatHelper\n\non:\n  schedule:\n    - cron: '0 0 * * *'\n  workflow_dispatch:\n\njobs:\n  CompatHelper:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Set up Julia\n        uses: julia-actions/setup-julia@v1\n        with:\n          version: '1.6'  # Specify the version of Julia you want to use\n\n      - name: Run CompatHelper\n        run: julia -e 'using Pkg; Pkg.add(\"CompatHelper\"); using CompatHelper; CompatHelper.run()'\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 126, "completion_tokens": 144, "total_tokens": 270, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_67042671477c81908b8951eafff7640c", "custom_id": "63c49db41899db5886501d09", "response": {"status_code": 200, "request_id": "38270c2d2a082d493887842bdad49eab", "body": {"id": "chatcmpl-AFmRzthxrhjOGSwO08tufoZJDv7lD", "object": "chat.completion", "created": 1728324527, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: Docker\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - docker\n  schedule:\n    - cron: '0 12 * * 1'\n\njobs:\n  build-and-push-image:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      \n      - name: Set up Common Lisp\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y sbcl\n      \n      - name: Build and push Docker image\n        run: |\n          docker build -t my-lisp-app .\n          docker push my-lisp-app\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 153, "completion_tokens": 138, "total_tokens": 291, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
{"id": "batch_req_6704267169dc8190bfa7bc0aec457011", "custom_id": "63c5c634ac4f2678a5bd7d01", "response": {"status_code": 200, "request_id": "aa207cd2b3636d0d4c3336b3c63ed972", "body": {"id": "chatcmpl-AFmRu458B7wvIsVaMTUPOb2YKIah5", "object": "chat.completion", "created": 1728324522, "model": "gpt-4o-mini-2024-07-18", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```yaml\nname: LLVM Tests\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - release/**\n    paths:\n      - llvm/**\n      - .github/workflows/llvm-tests.yml\n      - .github/workflows/llvm-project-tests.yml\n  pull_request:\n    branches:\n      - release/**\n    paths:\n      - llvm/**\n      - .github/workflows/llvm-tests.yml\n      - .github/workflows/llvm-project-tests.yml\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  check_all:\n    name: Test llvm,clang,libclc\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Run llvm tests\n        run: echo \"Running llvm, clang, libclc tests\"\n\n  build_lldb:\n    name: Build lldb\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Build lldb\n        run: echo \"Building lldb\"\n\n  check_lld:\n    name: Test lld\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Run lld tests\n        run: echo \"Running lld tests\"\n\n  abi-dump-setup:\n    name: Set up abi dump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Set up abi dump\n        run: echo \"Setting up abi dump\"\n\n  abi-dump:\n    name: Execute abi dump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Execute abi dump\n        run: echo \"Executing abi dump\"\n\n  abi-compare:\n    name: Compare abi\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Compare abi\n        run: echo \"Comparing abi\"\n```", "refusal": null}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 391, "completion_tokens": 478, "total_tokens": 869, "prompt_tokens_details": {"cached_tokens": 0}, "completion_tokens_details": {"reasoning_tokens": 0}}, "system_fingerprint": "fp_f85bea6784"}}, "error": null}
